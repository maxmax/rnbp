{"version":3,"sources":["/Users/maxkv/Apps/rnbp/assets/images/robot-prod.png","/Users/maxkv/Apps/rnbp/store/ViewStore.js","/Users/maxkv/Apps/rnbp/services/request.js","/Users/maxkv/Apps/rnbp/store/models/Square.js","/Users/maxkv/Apps/rnbp/store/SquaredStore.js","/Users/maxkv/Apps/rnbp/store/RootStore.js","/Users/maxkv/Apps/rnbp/constants/Colors.js","/Users/maxkv/Apps/rnbp/components/TabBarIcon.js","/Users/maxkv/Apps/rnbp/components/StyledText.js","/Users/maxkv/Apps/rnbp/components/SquareItem/styleSheet.js","/Users/maxkv/Apps/rnbp/components/SquareItem/index.js","/Users/maxkv/Apps/rnbp/static/entries.js","/Users/maxkv/Apps/rnbp/components/SquareWrapper/styleSheet.js","/Users/maxkv/Apps/rnbp/components/SquareWrapper/index.js","/Users/maxkv/Apps/rnbp/screens/HomeScreen.js","/Users/maxkv/Apps/rnbp/screens/LinksScreen.js","/Users/maxkv/Apps/rnbp/screens/SquaredScreen.js","/Users/maxkv/Apps/rnbp/screens/SettingsScreen.js","/Users/maxkv/Apps/rnbp/navigation/MainTabNavigator.js","/Users/maxkv/Apps/rnbp/navigation/AppNavigator.web.js","/Users/maxkv/Apps/rnbp/App.js","/Users/maxkv/Apps/rnbp/web-build/register-service-worker.js","/Users/maxkv/Apps/rnbp/assets/images/robot-dev.png","/Users/maxkv/Apps/rnbp/assets/fonts/SpaceMono-Regular.ttf"],"names":["module","exports","ViewStore","types","model","view","optional","number","views","self","actions","setView","getView","viewStore","create","persist","storage","AsyncStorage","jsonify","parseJSON","response","status","json","checkStatus","error","Error","statusText","Square","id","title","string","image","SquaredStore","squareActive","squared","array","state","saveSquared","getSquared","flow","payload","fetch","method","then","console","log","length","afterCreate","squaredStore","RootStore","tintColor","tabIconDefault","tabIconSelected","tabBar","errorBackground","errorText","warningBackground","warningText","noticeBackground","noticeText","TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","MonoText","Text","fontFamily","StyleSheet","slide","opacity","slideActive","width","height","resizeMode","textAlign","paddingTop","paddingBottom","SquareItem","save","active","View","styles","TouchableOpacity","onPress","Image","source","uri","container","flex","alignItems","justifyContent","padding","margin","SquareWrapperComponent","data","renderItem","item","index","_renderItem","sliderWidth","itemWidth","SquareWrapper","this","rootStore","React","Component","inject","observer","HomeScreen","ScrollView","contentContainerStyle","contentContainer","welcomeContainer","require","welcomeImage","getStartedContainer","DevelopmentModeNotice","getStartedText","helpContainer","handleHelpPress","helpLink","helpLinkText","tabBarInfoContainer","tabBarInfoText","codeHighlightContainer","navigationFilename","codeHighlightText","developmentModeText","WebBrowser","navigationOptions","header","backgroundColor","fontSize","lineHeight","marginTop","marginLeft","marginHorizontal","homeScreenFilename","marginVertical","borderRadius","paddingHorizontal","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","LinksScreen","containerInfo","SquaredScreenContainer","map","i","key","SquaredScreen","SettingsScreen","config","web","headerMode","default","HomeStack","createStackNavigator","Home","tabBarLabel","tabBarIcon","OS","path","LinksStack","Links","SquaredStack","Squared","SettingsStack","Settings","tabNavigator","createBottomTabNavigator","switchNavigator","createSwitchNavigator","Main","MainTabNavigator","createBrowserApp","history","App","useState","isLoadingComplete","setLoadingComplete","skipLoadingScreen","StatusBar","barStyle","AppLoading","startAsync","loadResourcesAsync","onError","handleLoadingError","onFinish","handleFinishLoading","a","async","Promise","all","Asset","loadAsync","Font","font","warn","navigator","window","addEventListener","serviceWorker","register","scope","info","catch"],"mappings":"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","file":"static/js/app.7ea1c9b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot-prod.2ec19ca0.png\";","import { AsyncStorage } from 'react-native';\nimport { types, getRoot } from 'mobx-state-tree';\nimport { persist } from 'mst-persist';\n\nexport const ViewStore = types\n  .model('ViewStore', {\n    view: types.optional(types.number, 1),\n  })\n  .views((self) => ({\n    get viewStore() {\n      return self.view;\n    },\n  }))\n  .actions((self) => ({\n    setView(view) {\n      self.view = view;\n    },\n    getView() {\n      // self.square = square;\n    },\n  }));\n\n\nconst viewStore = ViewStore.create({});\n\npersist('ViewStore', viewStore, {\n  storage: AsyncStorage,\n  jsonify: true,\n  // whitelist: ['view']\n});\n\nexport default viewStore;\n","import { API_ROOT } from 'react-native-dotenv';\n// const API_ROOT = process.env.API_ROOT;\n\n/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(url, options) {\n  const requestUrl = `${API_ROOT}${url}`;\n\n  return fetch(requestUrl, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}\n","// import AsyncStorage from '@react-native-community/async-storage';\n// import Geolocation from '@react-native-community/geolocation';\nimport { AsyncStorage } from 'react-native';\nimport { types, getRoot } from 'mobx-state-tree';\nimport { persist } from 'mst-persist';\n\nexport const Square = types.model({\n  id: types.number,\n  title: types.string,\n  image: types.string,\n});\n","import { AsyncStorage } from 'react-native';\nimport { types, getRoot, flow } from 'mobx-state-tree';\nimport { persist } from 'mst-persist';\nimport request from '../services/request';\nimport { Square } from './models/Square';\n\nexport const SquaredStore = types\n  .model('SquaredStore', {\n    squareActive: types.optional(types.number, 1),\n    squared: types.optional(types.array(Square), []),\n    state: types.optional(types.string, ''),\n  })\n  .views((self) => ({\n    // get squareStore() {\n    //  return self.view;\n    // },\n  }))\n  .actions((self) => {\n    function saveSquared(id) {\n      self.squareActive = id;\n    }\n\n    const getSquared = flow(function* getSquared(payload) {\n      self.state = 'pending';\n      const requestURL = '/squared/';\n      try {\n        const response = yield request(requestURL, {\n          method: 'GET',\n        });\n        console.log('getSquared______response!', response);\n        if (response.length < 1) {\n          self.squared = response;\n          self.state = 'empty';\n        } else {\n          self.squared = response;\n          self.state = 'done';\n        }\n        //self.squared = response;\n        //self.state = 'done';\n      } catch (err) {\n        console.log('getSquared______ERROR!');\n        self.state = 'error';\n      }\n    });\n\n    return {\n      saveSquared,\n      getSquared,\n      afterCreate() {\n        // getSquared()\n      }\n    };\n  });\n\n\nconst squaredStore = SquaredStore.create({});\n\npersist('SquaredStore', squaredStore, {\n  storage: AsyncStorage,\n  jsonify: true,\n  // whitelist: ['squared']\n});\n\nexport default squaredStore;\n","import { types } from 'mobx-state-tree';\nimport viewStore, { ViewStore } from './ViewStore';\nimport squaredStore, { SquaredStore } from './SquaredStore';\n\nexport const RootStore = types\n  .model('RootStore', {\n    viewStore: types.optional(ViewStore, () => viewStore),\n    squaredStore: types.optional(SquaredStore, () => squaredStore),\n  });\n","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={26}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import React from 'react';\nimport { Text } from 'react-native';\n\nexport function MonoText(props) {\n  return (\n    <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />\n  );\n}\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  slide: {\n    opacity: 0.6\n  },\n  slideActive: {\n    opacity: 1\n  },\n  image: {\n    width: '100%',\n    height: 200,\n    resizeMode: 'contain'\n  },\n  title: {\n    textAlign: 'center',\n    paddingTop: 22,\n    paddingBottom: 30,\n  },\n});\n","import React from 'react';\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\nimport styles from './styleSheet';\n\nexport function SquareItem({ id, title, image, save, active }) {\n  return (\n    <View style={[styles.slide, active === id && styles.slideActive]}>\n      <TouchableOpacity onPress={() => save(id)}>\n        <Image source={{uri: image}} style={styles.image} />\n        <Text style={styles.title}>{ title }</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","export const SQUARED = [\n    {\n        id: 1,\n        title: 'Beautiful and dramatic Antelope Canyon',\n        subtitle: 'Lorem ipsum dolor sit amet et nuncat mergitur',\n        image: 'https://i.imgur.com/UYiroysl.jpg'\n    },\n    {\n        id: 2,\n        title: 'Earlier this morning, NYC',\n        subtitle: 'Lorem ipsum dolor sit amet',\n        image: 'https://i.imgur.com/UPrs1EWl.jpg'\n    },\n    {\n        id: 3,\n        title: 'White Pocket Sunset',\n        subtitle: 'Lorem ipsum dolor sit amet et nuncat ',\n        image: 'https://i.imgur.com/MABUbpDl.jpg'\n    },\n];\n\nexport const ENTRIES1 = [\n    {\n        title: 'Beautiful and dramatic Antelope Canyon',\n        subtitle: 'Lorem ipsum dolor sit amet et nuncat mergitur',\n        illustration: 'https://i.imgur.com/UYiroysl.jpg'\n    },\n    {\n        title: 'Earlier this morning, NYC',\n        subtitle: 'Lorem ipsum dolor sit amet',\n        illustration: 'https://i.imgur.com/UPrs1EWl.jpg'\n    },\n    {\n        title: 'White Pocket Sunset',\n        subtitle: 'Lorem ipsum dolor sit amet et nuncat ',\n        illustration: 'https://i.imgur.com/MABUbpDl.jpg'\n    },\n    {\n        title: 'Acrocorinth, Greece',\n        subtitle: 'Lorem ipsum dolor sit amet et nuncat mergitur',\n        illustration: 'https://i.imgur.com/KZsmUi2l.jpg'\n    },\n    {\n        title: 'The lone tree, majestic landscape of New Zealand',\n        subtitle: 'Lorem ipsum dolor sit amet',\n        illustration: 'https://i.imgur.com/2nCt3Sbl.jpg'\n    },\n    {\n        title: 'Middle Earth, Germany',\n        subtitle: 'Lorem ipsum dolor sit amet',\n        illustration: 'https://i.imgur.com/lceHsT6l.jpg'\n    }\n];\n\nexport const ENTRIES2 = [\n    {\n        title: 'Favourites landscapes 1',\n        subtitle: 'Lorem ipsum dolor sit amet',\n        illustration: 'https://i.imgur.com/SsJmZ9jl.jpg'\n    },\n    {\n        title: 'Favourites landscapes 2',\n        subtitle: 'Lorem ipsum dolor sit amet et nuncat mergitur',\n        illustration: 'https://i.imgur.com/5tj6S7Ol.jpg'\n    },\n    {\n        title: 'Favourites landscapes 3',\n        subtitle: 'Lorem ipsum dolor sit amet et nuncat',\n        illustration: 'https://i.imgur.com/pmSqIFZl.jpg'\n    },\n    {\n        title: 'Favourites landscapes 4',\n        subtitle: 'Lorem ipsum dolor sit amet et nuncat mergitur',\n        illustration: 'https://i.imgur.com/cA8zoGel.jpg'\n    },\n    {\n        title: 'Favourites landscapes 5',\n        subtitle: 'Lorem ipsum dolor sit amet',\n        illustration: 'https://i.imgur.com/pewusMzl.jpg'\n    },\n    {\n        title: 'Favourites landscapes 6',\n        subtitle: 'Lorem ipsum dolor sit amet et nuncat',\n        illustration: 'https://i.imgur.com/l49aYS3l.jpg'\n    }\n];\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    // textAlign: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    margin: 20\n  },\n});\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\nimport Carousel from 'react-native-snap-carousel';\nimport { SquareItem } from '../../components/SquareItem';\nimport { SQUARED } from '../../static/entries';\nimport styles from './styleSheet';\n\nfunction SquareWrapperComponent({ data, save, active }) {\n\n  const _renderItem = (data) => {\n    return (\n      <SquareItem\n        active={active}\n        save={save}\n        {...data.item} />\n    );\n  }\n\n  return (\n    <Carousel\n      data={data}\n      renderItem={(item, index) => _renderItem(item)}\n      sliderWidth={300}\n      itemWidth={300} />\n  );\n}\n\nclass SquareWrapper extends React.Component {\n  componentDidMount() {\n    const {\n      rootStore: {\n        squaredStore: {\n          getSquared\n        }\n      },\n    } = this.props;\n    getSquared();\n  }\n\n  render() {\n    const {\n      rootStore: {\n        squaredStore: {\n          squared,\n          saveSquared,\n          squareActive,\n          state\n        }\n      },\n    } = this.props;\n\n    return (\n      <View style={styles.container}>\n        {state === 'pending' && <View><Text>Loading...</Text></View>}\n        {state === 'error' && <View><Text>Squared Error!</Text></View>}\n        {state === 'empty' && <View><Text>Squared Empty!</Text></View>}\n        {squared && state === 'done' && saveSquared && squareActive && <SquareWrapperComponent data={squared} save={saveSquared} active={squareActive} />}\n      </View>\n    );\n  }\n}\n\nexport default inject(\"rootStore\")(observer(SquareWrapper));\n","import * as WebBrowser from 'expo-web-browser';\nimport React from 'react';\nimport {\n  Image,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { MonoText } from '../components/StyledText';\nimport SquareWrapper from '../components/SquareWrapper';\n\nexport default function HomeScreen() {\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}>\n        <View style={styles.welcomeContainer}>\n          <Image\n            source={\n              __DEV__\n                ? require('../assets/images/robot-dev.png')\n                : require('../assets/images/robot-prod.png')\n            }\n            style={styles.welcomeImage}\n          />\n        </View>\n\n        <View style={styles.getStartedContainer}>\n          <DevelopmentModeNotice />\n\n          <Text style={styles.getStartedText}>Choose a square for today</Text>\n\n          <SquareWrapper />\n        </View>\n\n        <View style={styles.helpContainer}>\n          <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n            <Text style={styles.helpLinkText}>\n              Show more Square info\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n\n      <View style={styles.tabBarInfoContainer}>\n        <Text style={styles.tabBarInfoText}>\n          This is a tab bar. You can edit it in:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.navigationFilename]}>\n          <MonoText style={styles.codeHighlightText}>\n            navigation/MainTabNavigator.js\n          </MonoText>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n    );\n\n    return (\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use\n        useful development tools. {learnMoreButton}\n      </Text>\n    );\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    );\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync(\n    'https://google.com'\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://google.com'\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import React from 'react';\nimport { ScrollView, StyleSheet, View, Text } from 'react-native';\nimport { ExpoLinksView } from '@expo/samples';\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container}>\n      {/**\n       * Go ahead and delete ExpoLinksView and replace it with your content;\n       * we just wanted to provide you with some helpful links.\n       */}\n      <ExpoLinksView />\n      <View style={styles.containerInfo}>\n        <Text>Go ahead and delete ExpoLinksView and replace it with your content, we just wanted to provide you with some helpful links</Text>\n      </View>\n    </ScrollView>\n  );\n}\n\nLinksScreen.navigationOptions = {\n  title: 'Links',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n    backgroundColor: '#fff',\n  },\n  containerInfo: {\n    padding: 42,\n  },\n});\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { ScrollView, StyleSheet, View, Text } from 'react-native';\nimport { SquareItem } from '../components/SquareItem';\n\nfunction SquaredScreenContainer({ data, active, save }) {\n  return (\n    <ScrollView style={styles.container}>\n      {data.map((item, i) => {\n        return (<SquareItem key={i} active={active} save={save} {...item} />)\n      })}\n    </ScrollView>\n  );\n}\n\nclass SquaredScreen extends React.Component {\n  componentDidMount() {\n    const {\n      rootStore: {\n        squaredStore: {\n          getSquared\n        }\n      },\n    } = this.props;\n    getSquared();\n  }\n\n  render() {\n    const {\n      rootStore: {\n        viewStore: {\n          view,\n        },\n        squaredStore: {\n          squared,\n          saveSquared,\n          squareActive\n        }\n      },\n    } = this.props;\n\n    return <SquaredScreenContainer data={squared} save={saveSquared} active={squareActive} />;\n  }\n}\n\nSquaredScreen.navigationOptions = {\n  title: 'Squared',\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n    backgroundColor: '#fff',\n  },\n});\n\nexport default inject(\"rootStore\")(observer(SquaredScreen));\n","import React from 'react';\nimport { ExpoConfigView } from '@expo/samples';\n\nexport default function SettingsScreen() {\n  /**\n   * Go ahead and delete ExpoConfigView and replace it with your content;\n   * we just wanted to give you a quick view of your config.\n   */\n  return <ExpoConfigView />;\n}\n\nSettingsScreen.navigationOptions = {\n  title: 'app.json',\n};\n","import React from 'react';\nimport { Platform } from 'react-native';\nimport { createStackNavigator, createBottomTabNavigator } from 'react-navigation';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport SquaredScreen from '../screens/SquaredScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\n\nconst config = Platform.select({\n  web: { headerMode: 'screen' },\n  default: {},\n});\n\nconst HomeStack = createStackNavigator(\n  {\n    Home: HomeScreen,\n  },\n  config\n);\n\nHomeStack.navigationOptions = {\n  tabBarLabel: 'Home',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon\n      focused={focused}\n      name={\n        Platform.OS === 'ios'\n          ? `ios-information-circle${focused ? '' : '-outline'}`\n          : 'md-information-circle'\n      }\n    />\n  ),\n};\n\nHomeStack.path = '';\n\nconst LinksStack = createStackNavigator(\n  {\n    Links: LinksScreen,\n  },\n  config\n);\n\nLinksStack.navigationOptions = {\n  tabBarLabel: 'Links',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-link' : 'md-link'} />\n  ),\n};\n\nLinksStack.path = '';\n\nconst SquaredStack = createStackNavigator(\n  {\n    Squared: SquaredScreen,\n  },\n  config\n);\n\nSquaredStack.navigationOptions = {\n  tabBarLabel: 'Squared',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-book' : 'md-book'} />\n  ),\n};\n\nSquaredStack.path = '';\n\nconst SettingsStack = createStackNavigator(\n  {\n    Settings: SettingsScreen,\n  },\n  config\n);\n\nSettingsStack.navigationOptions = {\n  tabBarLabel: 'Settings',\n  tabBarIcon: ({ focused }) => (\n    <TabBarIcon focused={focused} name={Platform.OS === 'ios' ? 'ios-options' : 'md-options'} />\n  ),\n};\n\nSettingsStack.path = '';\n\nconst tabNavigator = createBottomTabNavigator({\n  HomeStack,\n  LinksStack,\n  SquaredStack,\n  SettingsStack,\n});\n\ntabNavigator.path = '';\n\nexport default tabNavigator;\n","import { createBrowserApp } from '@react-navigation/web';\nimport { createSwitchNavigator } from 'react-navigation';\n\nimport MainTabNavigator from './MainTabNavigator';\n\nconst switchNavigator = createSwitchNavigator({\n  // You could add another route here for authentication.\n  // Read more at https://reactnavigation.org/docs/en/auth-flow.html\n  Main: MainTabNavigator,\n});\nswitchNavigator.path = '';\n\nexport default createBrowserApp(switchNavigator, { history: 'hash' });\n","import { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport React, { useState } from 'react';\nimport { Provider } from 'mobx-react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { RootStore } from './store/RootStore';\n\nimport AppNavigator from './navigation/AppNavigator';\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return (\n      <AppLoading\n        startAsync={loadResourcesAsync}\n        onError={handleLoadingError}\n        onFinish={() => handleFinishLoading(setLoadingComplete)}\n      />\n    );\n  } else {\n    return (\n      <Provider rootStore={RootStore.create({})}>\n        <View style={styles.container}>\n          {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n          <AppNavigator />\n        </View>\n      </Provider>\n    );\n  }\n}\n\nasync function loadResourcesAsync() {\n  await Promise.all([\n    Asset.loadAsync([\n      require('./assets/images/robot-dev.png'),\n      require('./assets/images/robot-prod.png'),\n    ]),\n    Font.loadAsync({\n      // This is the font that we are using for our tab bar\n      ...Ionicons.font,\n      // We include SpaceMono because we use it in HomeScreen.js. Feel free to\n      // remove this if you are not using it in your app\n      'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n    }),\n  ]);\n}\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nfunction handleFinishLoading(setLoadingComplete) {\n  setLoadingComplete(true);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/robot-dev.c6505b75.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}