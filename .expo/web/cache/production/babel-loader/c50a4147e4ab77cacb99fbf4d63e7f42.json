{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{AppLoading}from'expo';import{Asset}from'expo-asset';import*as Font from'expo-font';import React,{useState}from'react';import{Provider}from'mobx-react';import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{Ionicons}from'@expo/vector-icons';import{RootStore}from\"./store/RootStore\";import AppNavigator from\"./navigation/AppNavigator\";var store=RootStore.create({});export default function App(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoadingComplete=_useState2[0],setLoadingComplete=_useState2[1];if(!isLoadingComplete&&!props.skipLoadingScreen){return React.createElement(AppLoading,{startAsync:loadResourcesAsync,onError:handleLoadingError,onFinish:function onFinish(){return handleFinishLoading(setLoadingComplete);}});}else{return React.createElement(Provider,{rootStore:store},React.createElement(View,{style:styles.container},Platform.OS==='ios'&&React.createElement(StatusBar,{barStyle:\"default\"}),React.createElement(AppNavigator,null)));}}function loadResourcesAsync(){return _regeneratorRuntime.async(function loadResourcesAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Promise.all([Asset.loadAsync([require(\"./assets/images/robot-dev.png\"),require(\"./assets/images/robot-prod.png\")]),Font.loadAsync(_objectSpread({},Ionicons.font,{'space-mono':require(\"./assets/fonts/SpaceMono-Regular.ttf\")}))]));case 2:case\"end\":return _context.stop();}}});}function handleLoadingError(error){console.warn(error);}function handleFinishLoading(setLoadingComplete){setLoadingComplete(true);}var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff'}});","map":{"version":3,"sources":["/Users/maxkv/Apps/rnbp/App.js"],"names":["AppLoading","Asset","Font","React","useState","Provider","Ionicons","RootStore","AppNavigator","store","create","App","props","isLoadingComplete","setLoadingComplete","skipLoadingScreen","loadResourcesAsync","handleLoadingError","handleFinishLoading","styles","container","Platform","OS","Promise","all","loadAsync","require","font","error","console","warn","StyleSheet","flex","backgroundColor"],"mappings":"49BAAA,OAASA,UAAT,KAA2B,MAA3B,CACA,OAASC,KAAT,KAAsB,YAAtB,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,WAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,KAAyB,YAAzB,C,kPAEA,OAASC,QAAT,KAAyB,oBAAzB,CACA,OAASC,SAAT,yBAEA,MAAOC,CAAAA,YAAP,iCAEA,GAAMC,CAAAA,KAAK,CAAGF,SAAS,CAACG,MAAV,CAAiB,EAAjB,CAAd,CAEA,cAAe,SAASC,CAAAA,GAAT,CAAaC,KAAb,CAAoB,eACeR,QAAQ,CAAC,KAAD,CADvB,wCAC1BS,iBAD0B,eACPC,kBADO,eAGjC,GAAI,CAACD,iBAAD,EAAsB,CAACD,KAAK,CAACG,iBAAjC,CAAoD,CAClD,MACE,qBAAC,UAAD,EACE,UAAU,CAAEC,kBADd,CAEE,OAAO,CAAEC,kBAFX,CAGE,QAAQ,CAAE,0BAAMC,CAAAA,mBAAmB,CAACJ,kBAAD,CAAzB,EAHZ,EADF,CAOD,CARD,IAQO,CACL,MACE,qBAAC,QAAD,EAAU,SAAS,CAAEL,KAArB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEU,MAAM,CAACC,SAApB,EACGC,QAAQ,CAACC,EAAT,GAAgB,KAAhB,EAAyB,oBAAC,SAAD,EAAW,QAAQ,CAAC,SAApB,EAD5B,CAEE,oBAAC,YAAD,MAFF,CADF,CADF,CAQD,CACF,CAED,QAAeN,CAAAA,kBAAf,gLACQO,OAAO,CAACC,GAAR,CAAY,CAChBvB,KAAK,CAACwB,SAAN,CAAgB,CACdC,OAAO,iCADO,CAEdA,OAAO,kCAFO,CAAhB,CADgB,CAKhBxB,IAAI,CAACuB,SAAL,kBAEKnB,QAAQ,CAACqB,IAFd,EAKE,aAAcD,OAAO,wCALvB,GALgB,CAAZ,CADR,gDAgBA,QAAST,CAAAA,kBAAT,CAA4BW,KAA5B,CAAmC,CAGjCC,OAAO,CAACC,IAAR,CAAaF,KAAb,EACD,CAED,QAASV,CAAAA,mBAAT,CAA6BJ,kBAA7B,CAAiD,CAC/CA,kBAAkB,CAAC,IAAD,CAAlB,CACD,CAED,GAAMK,CAAAA,MAAM,CAAGY,UAAU,CAACrB,MAAX,CAAkB,CAC/BU,SAAS,CAAE,CACTY,IAAI,CAAE,CADG,CAETC,eAAe,CAAE,MAFR,CADoB,CAAlB,CAAf","sourcesContent":["import { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport React, { useState } from 'react';\nimport { Provider } from 'mobx-react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { RootStore } from './store/RootStore';\n\nimport AppNavigator from './navigation/AppNavigator';\n\nconst store = RootStore.create({});\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return (\n      <AppLoading\n        startAsync={loadResourcesAsync}\n        onError={handleLoadingError}\n        onFinish={() => handleFinishLoading(setLoadingComplete)}\n      />\n    );\n  } else {\n    return (\n      <Provider rootStore={store}>\n        <View style={styles.container}>\n          {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n          <AppNavigator />\n        </View>\n      </Provider>\n    );\n  }\n}\n\nasync function loadResourcesAsync() {\n  await Promise.all([\n    Asset.loadAsync([\n      require('./assets/images/robot-dev.png'),\n      require('./assets/images/robot-prod.png'),\n    ]),\n    Font.loadAsync({\n      // This is the font that we are using for our tab bar\n      ...Ionicons.font,\n      // We include SpaceMono because we use it in HomeScreen.js. Feel free to\n      // remove this if you are not using it in your app\n      'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n    }),\n  ]);\n}\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nfunction handleFinishLoading(setLoadingComplete) {\n  setLoadingComplete(true);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}