{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";import{types,getRoot,flow}from'mobx-state-tree';import{persist}from'mst-persist';import request from\"../services/request\";import{Square}from\"./models/Square\";export var SquaredStore=types.model('SquaredStore',{squareActive:types.optional(types.number,1),squared:types.optional(types.array(Square),[])}).views(function(self){return{};}).actions(function(self){function saveSquared(id){self.squareActive=id;}var getSquared=flow(_regeneratorRuntime.mark(function getSquared(payload){var requestURL,response;return _regeneratorRuntime.wrap(function getSquared$(_context){while(1){switch(_context.prev=_context.next){case 0:requestURL='/squared/';_context.prev=1;_context.next=4;return request(requestURL,{method:'GET'});case 4:response=_context.sent;self.squared=response;_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.log('getSquared______ERROR!');case 11:case\"end\":return _context.stop();}}},getSquared,null,[[1,8]]);}));return{saveSquared:saveSquared,getSquared:getSquared,afterCreate:function afterCreate(){}};});var squaredStore=SquaredStore.create({});persist('SquaredStore',squaredStore,{storage:AsyncStorage,jsonify:true});export default squaredStore;","map":{"version":3,"sources":["/Users/maxkv/Apps/rnbp/store/SquaredStore.js"],"names":["types","getRoot","flow","persist","request","Square","SquaredStore","model","squareActive","optional","number","squared","array","views","self","actions","saveSquared","id","getSquared","payload","requestURL","method","response","console","log","afterCreate","squaredStore","create","storage","AsyncStorage","jsonify"],"mappings":"iIACA,OAASA,KAAT,CAAgBC,OAAhB,CAAyBC,IAAzB,KAAqC,iBAArC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,2BACA,OAASC,MAAT,uBAEA,MAAO,IAAMC,CAAAA,YAAY,CAAGN,KAAK,CAC9BO,KADyB,CACnB,cADmB,CACH,CACrBC,YAAY,CAAER,KAAK,CAACS,QAAN,CAAeT,KAAK,CAACU,MAArB,CAA6B,CAA7B,CADO,CAErBC,OAAO,CAAEX,KAAK,CAACS,QAAN,CAAeT,KAAK,CAACY,KAAN,CAAYP,MAAZ,CAAf,CAAoC,EAApC,CAFY,CADG,EAKzBQ,KALyB,CAKnB,SAACC,IAAD,QAAW,EAAX,EALmB,EAUzBC,OAVyB,CAUjB,SAACD,IAAD,CAAU,CACjB,QAASE,CAAAA,WAAT,CAAqBC,EAArB,CAAyB,CACvBH,IAAI,CAACN,YAAL,CAAoBS,EAApB,CACD,CAED,GAAMC,CAAAA,UAAU,CAAGhB,IAAI,0BAAC,QAAUgB,CAAAA,UAAV,CAAqBC,OAArB,6IAEhBC,UAFgB,CAEH,WAFG,iCAIH,MAAMhB,CAAAA,OAAO,CAACgB,UAAD,CAAa,CACzCC,MAAM,CAAE,KADiC,CAAb,CAAb,CAJG,OAIdC,QAJc,eAOpBR,IAAI,CAACH,OAAL,CAAeW,QAAf,CAPoB,+EASpBC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAToB,6CAAUN,UAAV,gBAAD,EAAvB,CAaA,MAAO,CACLF,WAAW,CAAXA,WADK,CAELE,UAAU,CAAVA,UAFK,CAGLO,WAHK,uBAGS,CAEb,CALI,CAAP,CAOD,CAnCyB,CAArB,CAsCP,GAAMC,CAAAA,YAAY,CAAGpB,YAAY,CAACqB,MAAb,CAAoB,EAApB,CAArB,CAEAxB,OAAO,CAAC,cAAD,CAAiBuB,YAAjB,CAA+B,CACpCE,OAAO,CAAEC,YAD2B,CAEpCC,OAAO,CAAE,IAF2B,CAA/B,CAAP,CAMA,cAAeJ,CAAAA,YAAf","sourcesContent":["import { AsyncStorage } from 'react-native';\nimport { types, getRoot, flow } from 'mobx-state-tree';\nimport { persist } from 'mst-persist';\nimport request from '../services/request';\nimport { Square } from './models/Square';\n\nexport const SquaredStore = types\n  .model('SquaredStore', {\n    squareActive: types.optional(types.number, 1),\n    squared: types.optional(types.array(Square), []),\n  })\n  .views((self) => ({\n    // get squareStore() {\n    //  return self.view;\n    // },\n  }))\n  .actions((self) => {\n    function saveSquared(id) {\n      self.squareActive = id;\n    }\n\n    const getSquared = flow(function* getSquared(payload) {\n      // self.state = 'pending';\n      const requestURL = '/squared/';\n      try {\n        const response = yield request(requestURL, {\n          method: 'GET',\n        });\n        self.squared = response;\n      } catch (err) {\n        console.log('getSquared______ERROR!');\n      }\n    });\n\n    return {\n      saveSquared,\n      getSquared,\n      afterCreate() {\n        // getSquared()\n      }\n    };\n  });\n\n\nconst squaredStore = SquaredStore.create({});\n\npersist('SquaredStore', squaredStore, {\n  storage: AsyncStorage,\n  jsonify: true,\n  // whitelist: ['squared']\n});\n\nexport default squaredStore;\n"]},"metadata":{},"sourceType":"module"}